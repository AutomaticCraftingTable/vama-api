version: '3.9'

networks:
  vama-api:
    driver: bridge
  traefik:
    external: true

volumes:
  postgres-data:
  redis-data:

services:
  app:
    build:
      context: ./environment/dev/app
      dockerfile: Dockerfile
      args:
        - INSTALL_XDEBUG=false
        - USER_ID=1000
    container_name: vama-api-app
    working_dir: /application
    volumes:
      - .:/application
      - ./environment/prod/app/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./environment/prod/app/php.ini:/usr/local/etc/php/conf.d/zzz-overrides.ini:ro
      - ./environment/prod/app/php-fpm.conf:/usr/local/etc/php-fpm.d/zzz-overrides.conf:ro
      - ./environment/prod/app/supervisord.conf:/etc/supervisor/supervisord.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vama-api.rule=Host(`146.59.34.168`)"
      - "traefik.http.routers.vama-api.entrypoints=web"
      - "traefik.http.services.vama-api.loadbalancer.server.port=80"
    ports:
      - "80:80"  # Required if you want to access directly via IP too
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=http://146.59.34.168
    networks:
      - vama-api
      - traefik
    restart: always
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:16.3-alpine3.18
    container_name: vama-db
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - PGDATA=/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname ${DB_DATABASE} --username ${DB_USERNAME}"]
      interval: 3s
      timeout: 3s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - vama-api
    restart: always

  redis:
    image: redis:7.2.4-alpine3.19
    container_name: vama-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - vama-api
    restart: always
